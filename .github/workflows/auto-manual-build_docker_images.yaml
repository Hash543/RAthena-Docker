# This workflow will manage the build of our Docker images
name: Auto Push - Mido-Wippa - Build docker images for Ragnarock server

# Controls when the action will run. 
on:
  # Workflow that will trigger on push with git tags with the format "vX.X.X"
  push:
    tags:
      - "v*.*.*"

# Will allow the Github_token and the workflow to write in the checkout repository
# VERY IMPORTANT as otherwise you will have "403 error" and even with a PAT in the url it will not work
permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # fluxcp:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-fluxcp          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/fluxcp/
  #         file: ./RagnarokDocker/fluxcp/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # mysql:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-mysql          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/mysql/
  #         file: ./RagnarokDocker/mysql/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # phpmyadmin:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-phpmyadmin          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/phpmyadmin/
  #         file: ./RagnarokDocker/phpmyadmin/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # robrowser:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-robrowser          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/robrowser/
  #         file: ./RagnarokDocker/robrowser/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # server:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-server        
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/server/
  #         file: ./RagnarokDocker/server/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  # wsproxy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v4

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ortizflorent/ragnarok-wsproxy          
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=semver,pattern={{version}}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./RagnarokDocker/wsproxy/ 
  #         file: ./RagnarokDocker/wsproxy/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}

  docker-compose:
    runs-on: ubuntu-latest
    needs: [fluxcp, mysql, phpmyadmin, robrowser, server, wsproxy]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          ref: 'main' # Have to put this as we are triggering with a tag event, so HEAD is detached

      # Use of "github.ref_name" to define a specific env var for subsequent actions
      - name: Tag vars modification
        run: echo "${{ github.ref_name }}" | sed 's/v//' >> $TAG_DOCKER

      # Here we can use the "github.ref.name" as we only trigger the workflow from a push TAG event, so the tag will be the ref name
      - name: Docker-compose update
        run: sed -Ei "s/v[0-9]+\.[0-9]+\.[0-9]+/${TAG_DOCKER}/g" RagnarokDocker/img-docker-compose.yml*

      - name: Docker-compose show
        run: cat RagnarokDocker/img-docker-compose.yml

      #- name: Git push for docker-compose
      #  run: |
      #    git config user.name github-actions
      #    git config user.email github-actions@github.com
      #    git add RagnarokDocker/img-docker-compose.yml
      #    git commit -m "ci: update image version ${TAG_DOCKER} - generated by CI"
      #    git push